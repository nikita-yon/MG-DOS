import os
import msvcrt

# Определение размеров экрана консоли
#CONSOLE_WIDTH = 100
#CONSOLE_HEIGHT = 100

# Определение всех уровней
levels = [
    # Уровень 1
    [
        "########################################",
        "#@    #   #   #   #   #   #   #E       #",
        "#   #   #   #   #   #   #   # ######   #",
        "###   #   #   #   #   #   #   #   #    #",
        "#   #   #   #   #   #   #   #   #    ###",
        "#   #   #   #   #   #   #   #   #      #",
        "#   #   #   #   #   #   #   #   #####  #",
        "#   #   #   #   #   #   #   #       #  #",
        "###   #   #   #   #   #   #   #####    #",
        "#L                                     #",
        "########################################",
    ],

    [
        "#######################################",
        "#@  #   #   #       #                 #",
        "#   # # #   #   #   #   # ########### #",
        "### # # #   #   #   #   #####  #E     #",
        "# # # # #   #   #   #   #####  ########",
        "# # # # #   #   #   #   #####         #",
        "# # # # #   #   #   #   #########     #",
        "# # # # #   #   #       #########     #",
        "# # # # #   #   #################     #",
        "# #   #                               #",
        "#######################################",
    ],

    [
        "#########################################",
        "#@         #           #            #   #",
        "### ### ### ### ### ### ### ####### ### #",
        "#             #     #             #   # #",
        "# ########### ### ### ######### ### ### #",
        "#         #       # #       #       #   #",
        "# ####### ### ####### ##### ### ### ### #",
        "#       #   # #   #   # # #   # #   #   #",
        "# ##### ### ### # ### ### ### # # ##### #",
        "# #   #       # #   # #   #   # #     # #",
        "# ### ####### ### ### ### # ### ### ### #",
        "# #                   # #       # #   # #",
        "# ####### ######### ### ####### # ### # #",
        "#       #         #   #     #   #   #   #",
        "####### # ######## ### ### ### #######  #",
        "#     # #           #   #   #       #   #",
        "# ### # # ########### ### ### ##### ### #",
        "# #   # #     #       #   #   #     # # #",
        "# # ### ### ### ##### ### ### ### ### # #",
        "# # #   #   #   # #   #   # #   #   #   #",
        "# # # ### # ### # # ### ### # ### ### ###",
        "#   #     #     #   #   #   #   #      E#",
        "#########################################",
    ],

    [
        "##################################################",
        "#@ #        #  #   #      #  # #     #         # #",
        "# # # # #### #  # ### ## ###  # # ### ####### # ##",
        "# #   #    # #  #   # ## #    # # #    #    #  # #",
        "# ###### # # # ## #### ## ### # # # #### ## ### ##",
        "#      # # #   # #    #    # # # # #    #    #   #",
        "####### # # # # # # #### #  # # # # # ## #  ######",
        "#      # #   # #   # #  #  # # # # # #  #        #",
        "# ###### ###### ### # # ## # # # # # # ## ####  ##",
        "#      #  #     #  # # # #  # # #   # # #  # #   #",
        "# ## ### ## #### # ## # # ### # #### # # ## # # ##",
        "#  # #    #  # # #  # # #   # #  # # # #   # #   #",
        "## # # #### # # # #### # ### # #  # # # #### ##  #",
        "#  # #    # # # # #    #   #   #  # # # #    #   #",
        "# ## # ## # # # # # ######### # #### # # ## ###  #",
        "#    # #    # # #   #   #   # # #    # # #    #  #",
        "### # # #### # # ###### # # # # # ## # # #  ######",
        "#   # # #    # #       # # # # # #  # # # #      #",
        "# ### # # #### # ###### # # # # # # ## # # #######",
        "# #   # # #    # #    # # #   # # #    # # #     #",
        "# # #### # #### # # ## # # ##### # # #### # ######",
        "# #      # #    # # #  # #      # # #    # #     #",
        "# ###### # # ## # # # #### ###### # # ## # # #####",
        "#       # # #  # # # #    #      # # #  # #      #",
        "######## # # #### # # #### ###### # # #### # #####",
        "#        # #     #   #    #       #   #    #     #",
        "# ###### # # ####### #### # ########## #### # ####",
        "#      # # # #     # #    # #        #     # #   #",
        "# ### ## # # # ####### #### # ####### # ### # ####",
        "#   # ## # # #       # #    # #      #   # #   # #",
        "### ###### # ###### ## # #### # #### #### # ## # #",
        "#   #    # #      #  # # #    # #   #  #  # #  # #",
        "# ### ## # # # ## # ## # ###### # ### ## # # ##  #",
        "#   #    # # # ## # #  # #      #   #    # #     #",
        "### # #### # # #   # # ## # #### # ######## # ## #",
        "#   # #    # # # ### #  # #    #          # #    #",
        "# ### # ## # # #    # #### # ## ########### # ####",
        "#     # ## #   ## ##   #  # #    #             # #",
        "########  ### ### ### #### # #### ############## #",
        "#             #         #  #   #                E#",
        "##################################################",
    ]
        # Добавьте карту для уровня 3
        # ...

]

def draw_level(level, player_x, player_y, exit_x, exit_y):
    os.system("cls")
    for row in level:
        for cell in row:
            if cell == "#":
                print("#", end="")
                #print(x, y)
            elif cell == "@":
                print("@", end="")
            elif cell == "E":
                print("E", end="")
            else:
                print(" ", end="")
        print()

# Основной цикл игры
current_level = 0
while current_level < len(levels):
    # Получение текущего уровня
    level = levels[current_level]

    # Найти координаты игрока и выхода на текущем уровне
    for y in range(len(level)):
        for x in range(len(level[y])):
            if level[y][x] == "@":
                player_x, player_y = x, y
            elif level[y][x] == "E":
                exit_x, exit_y = x, y
            elif level[y][x] == "L":
                print("dsadad")
    while True:
        # Отрисовка уровня
        draw_level(level, player_x, player_y, exit_x, exit_y)

        print("Position: X={} Y={}".format(player_x, player_y))

        # Проверка условия победы
        if player_x == exit_x and player_y == exit_y:
            print("Next level!")
            current_level += 1
            break

        # Обработка управления игроком
        key = msvcrt.getch().decode("utf-8").lower()
        new_player_x, new_player_y = player_x, player_y
        if key == "a" and level[player_y][player_x - 1] != "#":
            new_player_x -= 1
        elif key == "d" and level[player_y][player_x + 1] != "#":
            new_player_x += 1
        elif key == "w" and level[player_y - 1][player_x] != "#":
            new_player_y -= 1
        elif key == "s" and level[player_y + 1][player_x] != "#":
            new_player_y += 1
        elif key == "q":
            break



        if level[new_player_y][new_player_x] != "#":
            level[player_y] = level[player_y][:player_x] + " " + level[player_y][player_x+1:]
            player_x, player_y = new_player_x, new_player_y
            level[player_y] = level[player_y][:player_x] + "@" + level[player_y][player_x+1:]

# По достижении этой точки, игрок прошел все уровни.
print("Welldone!!!")